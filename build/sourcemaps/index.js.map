{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["let execAsync = require('exec-async');\nlet spawnAsync = require('@exponent/spawn-async');\nlet util = require('util');\n\nfunction osascriptArgs(script) {\n  if (!util.isArray(script)) {\n    script = [script];\n  }\n\n  let args = [];\n  for (let line of script) {\n    args.push('-e');\n    args.push(line);\n  }\n\n  return args;\n\n}\n\nasync function osascriptExecAsync(script, opts) {\n  return await execAsync('osascript', osascriptArgs(script), Object.assign({stdio: 'inherit'}, opts));\n}\n\nasync function osascriptSpawnAsync(script, opts) {\n  return await spawnAsync('osascript', osascriptArgs(script), opts);\n}\n\nasync function isAppRunningAsync(appName) {\n  let zeroMeansNo = (await osascriptExecAsync('tell app \"System Events\" to count processes whose name is ' + JSON.stringify(appName))).trim();\n  return (zeroMeansNo !== '0');\n}\n\nasync function safeIdOfAppAsync(appName) {\n  try {\n    return (await osascriptExecAsync('id of app \"Simulator\"')).trim();\n  } catch (e) {\n    return null;\n  }\n}\n\nasync function openFinderToFolderAsync(dir, activate=true) {\n  await osascriptSpawnAsync([\n      'tell application \"Finder\"',\n      'open POSIX file ' + JSON.stringify(dir),\n      (activate && 'activate' || ''),\n      'end tell',\n  ]);\n}\n\nasync function activateApp(appName) {\n  return await osascriptSpawnAsync('tell app ' + JSON.stringify(appName) + ' to activate');\n}\n\nasync function openInAtom(pth) {\n  return await osascriptSpawn('tell app \"Atom\" to open ' + JSON.stringify(pth));\n}\n\nasync function openInSublime(pth) {\n  return await osascriptSpawn('tell app \"Sublime Text\" to open ' + JSON.stringify(pth));\n}\n\nasync function chooseAppAsync(listOfAppNames) {\n  let runningAwaitables = [];\n  let appIdAwaitables = [];\n  for (let appName of listOfAppNames) {\n    runningAwaitables.push(isAppRunningAsync(appName));\n    appIdAwaitables.push(safeIdOfAppAsync(appName));\n  }\n  let running = await Promise.all(runningAwaitables);\n  let appIds = await Promise.all(appIdAwaitables);\n\n  let i;\n  for (i = 0; i < listOfAppNames.length; i++) {\n    if (running[i]) {\n      return listOfAppNames[i];\n    }\n  }\n\n  for (i = 0; i < listOfAppNames.length; i++) {\n    if (!!appIds[i]) {\n      return listOfAppNames[i];\n    }\n  }\n\n  return null;\n\n}\n\nasync function chooseEditorAppAsync() {\n  return await chooseAppAsync([\n    'Atom',\n    'Sublime Text',\n    'TextMate',\n    'TextWrangler',\n    'Brackets',\n    'SubEthaEdit',\n    'BBEdit',\n    'Textastic',\n    'UltraEdit',\n    'MacVim',\n    'CodeRunner 2',\n    'CodeRunner',\n    'TextEdit',\n  ]);\n}\n\nasync function chooseTerminalAppAsync() {\n  return await chooseAppAsync([\n    'iTerm',\n    // 'Cathode',\n    // 'Terminator',\n    'MacTerm',\n    'Terminal',\n  ]);\n}\n\nmodule.exports = {\n  activateApp,\n  chooseAppAsync,\n  chooseEditorAppAsync,\n  chooseTerminalAppAsync,\n  execAsync: osascriptExecAsync,\n  isAppRunningAsync,\n  openFinderToFolderAsync,\n  openInAtom,\n  openInSublime,\n  safeIdOfAppAsync,\n  spawnAsync: osascriptSpawnAsync,\n\n}\n"],"sourceRoot":"/source/"}